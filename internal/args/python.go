package args

var pythonHelp string = `Afbd help for Python target.

The Python generator is a dynamic generator. The access code is generated
during the runtime. This is very flexible approach as there is no need to
restart python applications to reload the system register information.

To produce acess code, the python generator requires registerification results
generated by the json target.

Once user generates the python code, there is no need to regenerate it when the
bus description changes as the python code is bus agnostic. What needs to be
regenerated in such a case, is the json registerification result.

Flags:
  -help  Display help.

Parameters:
  -path  Path for output files.
`

var Python python

type python struct {
	Present bool
	// Parameters
	Path string
}

func isValidFlagPython(flag string) bool {
	validFlags := map[string]bool{
		"-help": true,
	}

	if _, ok := validFlags[flag]; ok {
		return true
	}

	return false
}

func isValidParamPython(param string) bool {
	validParams := map[string]bool{
		"-path": true,
	}

	if _, ok := validParams[param]; ok {
		return true
	}

	return false
}

func setFlagPython(flag string) {}

func setParamPython(arg string) {
	switch param {
	case "-path":
		Python.Path = arg
	}
}

func postprocessPython() {
	if Python.Path == "" {
		Python.Path = Path
	}
}
